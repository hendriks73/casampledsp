name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:

    runs-on: macos-latest

    steps:
      - id: install-secret-keys
        name: Install secret keys
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 --decode > certificate.p12
          security create-keychain -p my_secret build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p my_secret build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.MACOS_CERTIFICATE_PWD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k my_secret build.keychain

      - uses: actions/checkout@v4

      - name: Install Doxygen
        run: brew install doxygen

      - name: Set up publication to Maven Central
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'
          architecture: x64
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - id: publish-to-central
        name: Publish to Central Repository
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_TTY: $(tty)
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
            -P release \
            clean deploy --file pom.xml

      - id: deploy-site
        name: Setup deployment to tagtraum site
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'
          architecture: x64
          server-id: tagtraum-site
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Deploy to tagtraum site
        env:
          MAVEN_USERNAME: ${{ secrets.SITE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SITE_TOKEN }}
        run: |
          sed -i.bak 's@tagtraum-site</id>@tagtraum-site</id><configuration><StrictHostKeyChecking>no</StrictHostKeyChecking></configuration><filePermissions>775</filePermissions><directoryPermissions>775</directoryPermissions>@' $HOME/.m2/settings.xml
          mvn \
            --no-transfer-progress \
            --batch-mode \
            clean site site:deploy --file pom.xml
